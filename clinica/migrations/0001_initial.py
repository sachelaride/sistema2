# Generated by Django 4.2.7 on 2025-07-29 07:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rgm', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('perfil', models.CharField(choices=[('ATENDENTE', 'Atendente'), ('ALUNO', 'Aluno'), ('PROFESSOR', 'Professor'), ('COORDENADOR', 'Coordenador')], max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField()),
                ('status', models.CharField(choices=[('AGENDADO', 'Agendado'), ('CONCLUIDO', 'Conclu√≠do'), ('CANCELADO', 'Cancelado')], default='AGENDADO', max_length=20)),
                ('aluno', models.ForeignKey(limit_choices_to={'perfil': 'ALUNO'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_aluno', to=settings.AUTH_USER_MODEL)),
                ('medico', models.ForeignKey(limit_choices_to={'perfil': 'PROFESSOR'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('endereco', models.TextField()),
                ('telefone', models.CharField(blank=True, max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator('^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$', 'CPF deve estar no formato XXX.XXX.XXX-XX')])),
                ('data_nascimento', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=15)),
                ('endereco', models.TextField(blank=True)),
                ('responsavel_legal', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PastaDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.clinica')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentoArquivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='uploads/%Y/%m/%d/')),
                ('hash_arquivo', models.CharField(max_length=64)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinica.paciente')),
                ('pasta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.pastadocumento')),
            ],
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacoes', models.TextField(blank=True)),
                ('data_inicio', models.DateTimeField(auto_now_add=True)),
                ('data_fim', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('INICIADO', 'Iniciado'), ('FINALIZADO', 'Finalizado')], default='INICIADO', max_length=20)),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.agendamento')),
                ('professor_monitor', models.ForeignKey(limit_choices_to={'perfil': 'PROFESSOR'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='agendamento',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.paciente'),
        ),
        migrations.AddField(
            model_name='user',
            name='clinica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinica.clinica'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='clinica_user_groups', to='auth.group'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='clinica_user_permissions', to='auth.permission'),
        ),
    ]
